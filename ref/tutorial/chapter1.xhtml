<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/>
	<meta charset="utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
	<meta name="description" content=""/>
	<meta name="author" content="ink, cookbook, recipes"/>
	<meta name="HandheldFriendly" content="True"/>
	<meta name="MobileOptimized" content="320"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"/>
	<meta property="og:title" content="Wrapl, The Programming Language"/>
	<meta property="og:description" content="Wrapl, The Programming Language"/>
	<meta property="og:url" content="http://wrapl.sf.net"/>
	<meta property="og:image" content="http://wrapl.sf.net/sample.png"/>
	<link rel="stylesheet" type="text/css" href="/css/spectre.css"/>
	<link rel="stylesheet" type="text/css" href="/css/spectre-exp.css"/>
	<link rel="stylesheet" type="text/css" href="/css/spectre-icons.css"/>
	<link rel="stylesheet" type="text/css" href="/code.css"/>
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp" crossorigin="anonymous"/>
	<link href="https://fonts.googleapis.com/css?family=Roboto|Roboto+Mono" rel="stylesheet"/>
	<link href="https://fonts.googleapis.com/css?family=Fira+Sans" rel="stylesheet"/>
	<link rel="stylesheet" href="https://cdn.rawgit.com/tonsky/FiraCode/1.205/distr/fira_code.css"/>
	<title>Chapter 1</title>
</head>
<body>
<div class="off-canvas off-canvas-sidebar-show">
	<a class="off-canvas-toggle btn btn-primary btn-action" href="#sidebar-id">
		<i class="icon icon-menu"></i>
	</a>
	<div id="sidebar-id" class="off-canvas-sidebar">
		<ul class="nav">
			<li class="nav-item"><a href="/index.xhtml" class="toplevel"><i class="fa fa-home"></i> Home</a>
				<ul class="nav">
					<li class="nav-item"><a href="/index.xhtml#Features">Features</a></li>
					<li class="nav-item"><a href="/index.xhtml#Contact">Contact</a></li>
				</ul>
			</li>
			<li class="nav-item"><a href="/news.xhtml" class="toplevel"><i class="fa fa-clock"></i> News</a></li>
			<li class="nav-item"><a href="/docs.xhtml" class="toplevel"><i class="fa fa-book"></i> Documentation</a>
				<ul class="nav">
					<li class="nav-item"><a href="/ref/tutorial.xhtml">Tutorial</a></li>
					<li class="nav-item"><a href="/docs.xhtml#Reference">Reference</a>
						<ul class="nav flyout right">
							<li class="nav-item"><a href="/ref/syntax.xhtml">Syntax</a></li>
							<li class="nav-item"><a href="/ref/expressions.xhtml">Expressions</a></li>
						</ul>
					</li>
					<li class="nav-item"><a href="/samples.xhtml">Sample</a></li>
					<li class="nav-item"><a href="/lib.xhtml">Libraries</a></li>
					<li class="nav-item"><a href="/docs.xhtml#tools">Tools</a></li>
					<li class="nav-item"><a href="/internals.xhtml">Internals</a></li>
				</ul>
			</li>
			<li class="nav-item"><a href="/download.xhtml" class="toplevel"><i class="fa fa-download"></i> Download</a>
				<ul class="nav">
					<li class="nav-item"><a href="/download.xhtml#Source">Source</a></li>
					<li class="nav-item"><a href="/download.xhtml#Binaries">Binaries</a></li>
				</ul>
			</li>
			<li class="nav-item"><a href="/links.xhtml" class="toplevel"><i class="fa fa-globe"></i> Links</a>
				<ul class="nav">
					<li class="nav-item"><a href="/links.xhtml#Programming_Languages">Other Languages</a></li>
					<li class="nav-item"><a href="/links.xhtml#Development_Tools">Development Tools</a></li>
					<li class="nav-item"><a href="/links.xhtml#Libraries">Libraries</a></li>
				</ul>
			</li>
		</ul>
	</div>
	<a class="off-canvas-overlay" href="#close"></a>
	<div class="off-canvas-content">
		<h1 id="title"><img src="/logo.png" alt="W"/> Wrapl, The Programming Language</h1>


<section id="Chapter_1" class="section"><h2>Chapter 1</h2>

<section id="Interactive_Mode" data-spy="true" data-target="#side-menu"><h3>Interactive Mode</h3>
<p>In order to quickly test some Wrapl code, Wrapl provides an interactive evaluator, <a href="/tools/wrapl.xhtml"><span class="var">wrapl</span></a>, normally installed as <span class="literal">/usr/bin/wrapl</span> on Linux, and as <span class="literal">C:\Program Files\Wrapl\bin\wrapl.exe</span> on Windows. At the Wrapl command prompt, any Wrapl expression or global declaration can be entered. Every expression and declaration in Wrapl must be terminated with a semicolon, <span class="code"><span class="delimiter">;</span></span>. The expression or declaration is then evaluated within an incremental global scope, and the result displayed to screen.</p>
<p>By default, <span class="var">wrapl</span> provides a basic line editor for input. Since Wrapl supports multiple threads, <span class="literal">Ctrl+C</span> interrupts the main thread and returns to the prompt. To exit the interpreter, use <span class="code"><span class="var">exit</span><span class="delimiter">;</span></span>, or <span class="literal">Ctrl+\</span> in Linux.</p>
<div class="term"><span class="prompt">$</span> wrapl
Interactive Wrapl [1.5.985:985]
<span class="prompt">--&gt;</span> 1 + 1;
2;
<span class="prompt">--&gt;</span> VAR x &lt;- "banana";
"banana"
<span class="prompt">--&gt;</span> ALL x:find("a");
[2, 4, 6]
<span class="prompt">--&gt;</span> ?x;
/usr/lib/riva/Agg/List.T
<span class="prompt">--&gt;</span> VAR n &lt;- 0;
0
<span class="prompt">--&gt;</span> REP n &lt;- n + 1; -- Press Ctrl+C at some stage here
^CInterrupted
<span class="prompt">--&gt;</span> n;
10242967
<span class="prompt">--&gt;</span> exit;
Exiting.
<span class="prompt">$</span>
</div>
<p><span class="literal">wrapl</span> accepts several command line arguments, see <a href="/tools/wrapl.xhtml"><span class="var">wrapl</span></a> for more details.</p>
</section>

<section id="Batch_Mode" data-spy="true" data-target="#side-menu"><h3>Batch Mode</h3>
<p>Wrapl programs are loaded within a versatile module system called <a href="/tools/riva.xhtml"><span class="var">riva</span></a>. Thus, a Wrapl module saved in the file <span class="literal">Hello.wrapl</span> can be run by executing <span class="literal">riva Hello.wrapl</span>.</p>
<div class="code"><div class="codeheader"><a href="/ref/tutorial/Hello.wrapl">Hello.wrapl [79 bytes]</a></div><span class="lineno">   1</span><span class="keyword">MOD</span> <span class="var">Hello</span><span class="delimiter">;</span>
<span class="lineno">   2</span>
<span class="lineno">   3</span><span class="keyword">IMP</span> <span class="var">IO</span><span class="delimiter">.</span><span class="var">Terminal</span> <span class="keyword">USE</span> <span class="var">Out</span><span class="delimiter">;</span>
<span class="lineno">   4</span>
<span class="lineno">   5</span><span class="var">Out</span><span class="symbol">:write</span><span class="delimiter">(</span><span class="literal">"Hello world!\n"</span><span class="delimiter">);</span>
<span class="lineno">   6</span>
<span class="lineno">   7</span><span class="keyword">END</span> <span class="var">Hello</span><span class="delimiter">.</span></div>
<div class="term"><span class="prompt">$</span> riva Hello.wrapl
Hello world!
<span class="prompt">$</span>
</div>
<p>The full filename is required since by default <span class="var">riva</span> does not add the current working directory to the module search path. To add the current directory to the search path, use <span class="literal">-L.</span>.</p>
<div class="term"><span class="prompt">$</span> riva Hello
Error: module Hello not found
<span class="prompt">$</span> riva -L. Hello
Hello world!
<span class="prompt">$</span>
</div>
<p>On *nix systems which support shell scripts, Wrapl modules can be made directly executable by including the line <span class="code"><span class="delimiter">#!/</span><span class="var">usr</span><span class="delimiter">/</span><span class="var">bin</span><span class="delimiter">/</span><span class="var">riva</span></span> at the beginning of the file, and making the file executable with <span class="literal">chmod +x filename</span>. The Wrapl module loader will automatically skip over a <span class="literal">#!</span> line at the start of a file. Note that this method loads the file by filename, as described above, so that the directory containing the executable script will not be added to the module search path.</p>
<div class="code"><div class="codeheader"><a href="/ref/tutorial/hello">hello [95 bytes]</a></div><span class="lineno">   1</span><span class="delimiter">#!/</span><span class="var">usr</span><span class="delimiter">/</span><span class="var">bin</span><span class="delimiter">/</span><span class="var">riva</span>
<span class="lineno">   2</span><span class="keyword">MOD</span> <span class="var">Hello</span><span class="delimiter">;</span>
<span class="lineno">   3</span>
<span class="lineno">   4</span><span class="keyword">IMP</span> <span class="var">IO</span><span class="delimiter">.</span><span class="var">Terminal</span> <span class="keyword">USE</span> <span class="var">Out</span><span class="delimiter">;</span>
<span class="lineno">   5</span>
<span class="lineno">   6</span><span class="var">Out</span><span class="symbol">:write</span><span class="delimiter">(</span><span class="literal">"Hello world!\n"</span><span class="delimiter">);</span>
<span class="lineno">   7</span>
<span class="lineno">   8</span><span class="keyword">END</span> <span class="var">Hello</span><span class="delimiter">.</span></div>
<div class="term"><span class="prompt">$</span> chmod +x hello
<span class="prompt">$</span> ./hello
Hello world!
<span class="prompt">$</span>
</div>
</section>

<section id="Comments" data-spy="true" data-target="#side-menu"><h3>Comments</h3>
<p>Line comments in Wrapl extend from <span class="code"><span class="comment">--</span></span> to the end of the line. Block comments extend from <span class="code"><span class="delimiter">-=</span></span> to the matching <span class="code"><span class="delimiter">=-</span></span>. Note that block comments may be nested, however if <span class="code"><span class="delimiter">-=</span></span> or <span class="code"><span class="delimiter">=-</span></span> is in a line comment, it will be ignored.</p>

<p>Examples:</p>
<div class="code"><span class="lineno">   1</span><span class="keyword">MOD</span> <span class="var">Main</span><span class="delimiter">;</span>
<span class="lineno">   2</span>
<span class="lineno">   3</span><span class="keyword">VAR</span> <span class="var">x</span><span class="delimiter">;</span> <span class="comment">-- This is a line comment</span>
<span class="lineno">   4</span>
<span class="lineno">   5</span><span class="keyword">DEF</span> <span class="var">f</span><span class="delimiter">(</span><span class="var">x</span><span class="delimiter">)</span> <span class="delimiter">(</span>
<span class="lineno">   6</span>    <span class="keyword">VAR</span> <span class="var">y</span> <span class="comment">-=</span>
<span class="lineno">   7</span><span class="comment">    This is a block comment</span>
<span class="lineno">   8</span><span class="comment">=-</span> <span class="delimiter">&lt;-</span> 100<span class="delimiter">;</span>
<span class="lineno">   9</span>    <span class="keyword">RET</span> <span class="var">x</span> <span class="delimiter">+</span> 200<span class="delimiter">;</span>
<span class="lineno">  10</span><span class="delimiter">);</span>
<span class="lineno">  11</span>
<span class="lineno">  12</span><span class="keyword">END</span> <span class="var">Main</span><span class="delimiter">.</span></div>
</section>

<section id="Source_Encoding" data-spy="true" data-target="#side-menu"><h3>Source Encoding</h3>
<p>The Wrapl interpreter accepts source code in UTF-8. This means that identifiers can be written using UTF-8 characters, which can allow for neater source code, especially when using mathematical symbols. In addition, there are single UTF-8 character equivalents of some keywords/operations. Of course, the Wrapl interpreter will accept code using only the ASCII subset of characters.</p>
<div class="code"><span class="lineno">   1</span><span class="keyword">MOD</span> <span class="var">Main</span><span class="delimiter">;</span>
<span class="lineno">   2</span>
<span class="lineno">   3</span><span class="keyword">IMP</span> <span class="var">IO</span><span class="delimiter">.</span><span class="var">Terminal</span> <span class="keyword">USE</span> <span class="var">Out</span><span class="delimiter">;</span>
<span class="lineno">   4</span>
<span class="lineno">   5</span><span class="keyword">VAR</span> Ω ← <span class="keyword">ALL</span> 1<span class="symbol">:to</span><span class="delimiter">(</span>10<span class="delimiter">);</span>
<span class="lineno">   6</span>
<span class="lineno">   7</span><span class="var">Out</span><span class="symbol">:write</span><span class="delimiter">(</span><span class="literal">'Mean = </span><span class="nested"><span class="delimiter">{(</span>∑ Ω<span class="symbol">:values</span><span class="delimiter">)</span> <span class="delimiter">/</span> Ω<span class="symbol">:length</span><span class="delimiter">}</span></span><span class="literal">\n'</span><span class="delimiter">);</span>
<span class="lineno">   8</span>
<span class="lineno">   9</span><span class="keyword">END</span> <span class="var">Main</span><span class="delimiter">.</span></div>
</section>

</section>


		<footer>
			<div class="text-center">
				<span>Copyright: &copy; 2008-2018 Raja Mukherji</span>
			</div>
		</footer>
	</div>
</div>
</body>
</html>
