<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/>
	<meta charset="utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
	<meta name="description" content=""/>
	<meta name="author" content="ink, cookbook, recipes"/>
	<meta name="HandheldFriendly" content="True"/>
	<meta name="MobileOptimized" content="320"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"/>
	<meta property="og:title" content="Wrapl, The Programming Language"/>
	<meta property="og:description" content="Wrapl, The Programming Language"/>
	<meta property="og:url" content="http://wrapl.sf.net"/>
	<meta property="og:image" content="http://wrapl.sf.net/sample.png"/>
	<link rel="stylesheet" type="text/css" href="/css/spectre.min.css"/>
	<link rel="stylesheet" type="text/css" href="/css/spectre-exp.min.css"/>
	<link rel="stylesheet" type="text/css" href="/css/spectre-icons.min.css"/>
	<link rel="stylesheet" type="text/css" href="/code.css"/>
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp" crossorigin="anonymous"/>
	<link href="https://fonts.googleapis.com/css?family=Roboto|Roboto+Mono" rel="stylesheet"/>
	<link href="https://fonts.googleapis.com/css?family=Fira+Sans" rel="stylesheet"/>
	<link rel="stylesheet" href="https://cdn.rawgit.com/tonsky/FiraCode/1.205/distr/fira_code.css"/>
	<title>b.Gir.Gio.Socket</title>
</head>
<body>
<div class="off-canvas off-canvas-sidebar-show">
	<a class="off-canvas-toggle btn btn-primary btn-action" href="#sidebar-id">
		<i class="icon icon-menu"></i>
	</a>
	<div id="sidebar-id" class="off-canvas-sidebar">
		<ul class="nav">
			<li class="nav-item"><a href="/index.xhtml" class="toplevel"><i class="fa fa-home"></i> Home</a>
				<ul class="nav">
					<li class="nav-item"><a href="/index.xhtml#Features">Features</a></li>
					<li class="nav-item"><a href="/index.xhtml#Contact">Contact</a></li>
				</ul>
			</li>
			<li class="nav-item"><a href="/news.xhtml" class="toplevel"><i class="fa fa-clock"></i> News</a></li>
			<li class="nav-item"><a href="/docs.xhtml" class="toplevel"><i class="fa fa-book"></i> Documentation</a>
				<ul class="nav">
					<li class="nav-item"><a href="/ref/tutorial.xhtml">Tutorial</a></li>
					<li class="nav-item"><a href="/docs.xhtml#Reference">Reference</a>
						<ul class="nav flyout right">
							<li class="nav-item"><a href="/ref/syntax.xhtml">Syntax</a></li>
							<li class="nav-item"><a href="/ref/expressions.xhtml">Expressions</a></li>
						</ul>
					</li>
					<li class="nav-item"><a href="/samples.xhtml">Sample</a></li>
					<li class="nav-item"><a href="/lib.xhtml">Libraries</a></li>
					<li class="nav-item"><a href="/docs.xhtml#tools">Tools</a></li>
				</ul>
			</li>
			<li class="nav-item"><a href="/download.xhtml" class="toplevel"><i class="fa fa-download"></i> Download</a>
				<ul class="nav">
					<li class="nav-item"><a href="/download.xhtml#Source">Source</a></li>
					<li class="nav-item"><a href="/download.xhtml#Binaries">Binaries</a></li>
				</ul>
			</li>
			<li class="nav-item"><a href="/links.xhtml" class="toplevel"><i class="fa fa-globe"></i> Links</a>
				<ul class="nav">
					<li class="nav-item"><a href="/links.xhtml#Programming_Languages">Other Languages</a></li>
					<li class="nav-item"><a href="/links.xhtml#Development_Tools">Development Tools</a></li>
					<li class="nav-item"><a href="/links.xhtml#Libraries">Libraries</a></li>
				</ul>
			</li>
		</ul>
	</div>
	<a class="off-canvas-overlay" href="#close"></a>
	<div class="off-canvas-content">
		<h1 id="title"><img src="/logo.png" alt="W"/> Wrapl, The Programming Language</h1>
<ul class="breadcrumb"><li class="breadcrumb-item"><a href="/lib.xhtml">Libraries</a></li><li class="breadcrumb-item"><a href="/lib/Gir.xhtml">Gir</a></li><li class="breadcrumb-item"><a href="/lib/Gir/Gio.xhtml">Gio</a></li><li class="breadcrumb-item"><a href="/lib/Gir/Gio/Socket.xhtml">Socket</a></li></ul><section id="Socket" class="section"><section id="Types" data-spy="true" data-target="#side-menu"><h3>Types</h3><h5 id="T"><span class="code">T</span></h5>Inherits from: <a class="id" href="/lib/Gir/GObject/Object.xhtml#T">Gir.GObject.Object.T</a>, <a class="id" href="/lib/Gir/GObject/Object.xhtml#T">Gir.GObject.Object.T</a>, <a class="id" href="/lib/Gir/Gio/DatagramBased.xhtml#T">Gir.Gio.DatagramBased.T</a>, <a class="id" href="/lib/Gir/Gio/Initable.xhtml#T">Gir.Gio.Initable.T</a>
<div class="comment">
		
		
		
		
	</div></section><section id="Constants" data-spy="true" data-target="#side-menu"><h3>Constants</h3><h5 id="Nil"><span class="code">Nil</span> <span class="delimiter">:</span> <a class="id" href="#T">T</a></h5><div class="comment">
	</div></section><section id="Functions" data-spy="true" data-target="#side-menu"><h3>Functions</h3><h5 id="New"><span class="code">New<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewFromFd"><span class="code">NewFromFd<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div></section><section id="Methods" data-spy="true" data-target="#side-menu"><h3>Methods</h3><h5 id="accept"><span class="code"><span class="symbol">:accept</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">cancellable</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/Gio/Socket.xhtml#T">Gir.Gio.Socket.T</a></span></h5><div class="comment">
		
		
		
	</div><h5 id="bind"><span class="code"><span class="symbol">:bind</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">address</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/SocketAddress.xhtml#T">Gir.Gio.SocketAddress.T</a><span class="delimiter">,</span> <span class="var">allow_reuse</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
	</div><h5 id="check_connect_result"><span class="code"><span class="symbol">:check_connect_result</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="close"><span class="code"><span class="symbol">:close</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="condition_check"><span class="code"><span class="symbol">:condition_check</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">condition</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
	</div><h5 id="condition_timed_wait"><span class="code"><span class="symbol">:condition_timed_wait</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">condition</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">timeout</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#T">Std.Integer.T</a><span class="delimiter">,</span> <span class="var">cancellable</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="condition_wait"><span class="code"><span class="symbol">:condition_wait</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">condition</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">cancellable</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
	</div><h5 id="connect"><span class="code"><span class="symbol">:connect</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">address</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/SocketAddress.xhtml#T">Gir.Gio.SocketAddress.T</a><span class="delimiter">,</span> <span class="var">cancellable</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
	</div><h5 id="connection_factory_create_connection"><span class="code"><span class="symbol">:connection_factory_create_connection</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/Gio/SocketConnection.xhtml#T">Gir.Gio.SocketConnection.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_available_bytes"><span class="code"><span class="symbol">:get_available_bytes</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_blocking"><span class="code"><span class="symbol">:get_blocking</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_broadcast"><span class="code"><span class="symbol">:get_broadcast</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_credentials"><span class="code"><span class="symbol">:get_credentials</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/Gio/Credentials.xhtml#T">Gir.Gio.Credentials.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="get_family"><span class="code"><span class="symbol">:get_family</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/Gio/SocketFamily.xhtml#T">Gir.Gio.SocketFamily.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_fd"><span class="code"><span class="symbol">:get_fd</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_keepalive"><span class="code"><span class="symbol">:get_keepalive</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_listen_backlog"><span class="code"><span class="symbol">:get_listen_backlog</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_local_address"><span class="code"><span class="symbol">:get_local_address</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/Gio/SocketAddress.xhtml#T">Gir.Gio.SocketAddress.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="get_multicast_loopback"><span class="code"><span class="symbol">:get_multicast_loopback</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_multicast_ttl"><span class="code"><span class="symbol">:get_multicast_ttl</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_option"><span class="code"><span class="symbol">:get_option</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">level</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">optname</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">value</span><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="get_protocol"><span class="code"><span class="symbol">:get_protocol</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/Gio/SocketProtocol.xhtml#T">Gir.Gio.SocketProtocol.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_remote_address"><span class="code"><span class="symbol">:get_remote_address</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/Gio/SocketAddress.xhtml#T">Gir.Gio.SocketAddress.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="get_socket_type"><span class="code"><span class="symbol">:get_socket_type</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/Gio/SocketType.xhtml#T">Gir.Gio.SocketType.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_timeout"><span class="code"><span class="symbol">:get_timeout</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_ttl"><span class="code"><span class="symbol">:get_ttl</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="is_closed"><span class="code"><span class="symbol">:is_closed</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div><h5 id="is_connected"><span class="code"><span class="symbol">:is_connected</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div><h5 id="join_multicast_group"><span class="code"><span class="symbol">:join_multicast_group</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">group</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/InetAddress.xhtml#T">Gir.Gio.InetAddress.T</a><span class="delimiter">,</span> <span class="var">source_specific</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">,</span> <span class="var">iface</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/String.xhtml#T">Std.String.T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="join_multicast_group_ssm"><span class="code"><span class="symbol">:join_multicast_group_ssm</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">group</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/InetAddress.xhtml#T">Gir.Gio.InetAddress.T</a><span class="delimiter">,</span> <span class="var">source_specific</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/InetAddress.xhtml#T">Gir.Gio.InetAddress.T</a><span class="delimiter">,</span> <span class="var">iface</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/String.xhtml#T">Std.String.T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="leave_multicast_group"><span class="code"><span class="symbol">:leave_multicast_group</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">group</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/InetAddress.xhtml#T">Gir.Gio.InetAddress.T</a><span class="delimiter">,</span> <span class="var">source_specific</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">,</span> <span class="var">iface</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/String.xhtml#T">Std.String.T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="leave_multicast_group_ssm"><span class="code"><span class="symbol">:leave_multicast_group_ssm</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">group</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/InetAddress.xhtml#T">Gir.Gio.InetAddress.T</a><span class="delimiter">,</span> <span class="var">source_specific</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/InetAddress.xhtml#T">Gir.Gio.InetAddress.T</a><span class="delimiter">,</span> <span class="var">iface</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/String.xhtml#T">Std.String.T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="listen"><span class="code"><span class="symbol">:listen</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="receive"><span class="code"><span class="symbol">:receive</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">buffer</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">size</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">cancellable</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
		
		
	</div><h5 id="receive_from"><span class="code"><span class="symbol">:receive_from</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">address</span><span class="delimiter">,</span> <span class="var">buffer</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">size</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">cancellable</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="receive_message"><span class="code"><span class="symbol">:receive_message</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">address</span><span class="delimiter">,</span> <span class="var">vectors</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">num_vectors</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">messages</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">num_messages</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">flags</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
		
		
		
		
		
	</div><h5 id="receive_messages"><span class="code"><span class="symbol">:receive_messages</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">messages</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">num_messages</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">flags</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">cancellable</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="receive_with_blocking"><span class="code"><span class="symbol">:receive_with_blocking</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">buffer</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">size</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">,</span> <span class="var">blocking</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">cancellable</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="send"><span class="code"><span class="symbol">:send</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">buffer</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">size</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">cancellable</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
		
		
	</div><h5 id="send_message"><span class="code"><span class="symbol">:send_message</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">address</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/SocketAddress.xhtml#T">Gir.Gio.SocketAddress.T</a><span class="delimiter">,</span> <span class="var">vectors</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">num_vectors</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">messages</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">num_messages</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">flags</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
		
		
		
		
		
	</div><h5 id="send_messages"><span class="code"><span class="symbol">:send_messages</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">messages</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">num_messages</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">flags</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">cancellable</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="send_to"><span class="code"><span class="symbol">:send_to</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">address</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/SocketAddress.xhtml#T">Gir.Gio.SocketAddress.T</a><span class="delimiter">,</span> <span class="var">buffer</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">size</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">cancellable</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="send_with_blocking"><span class="code"><span class="symbol">:send_with_blocking</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">buffer</span> <span class="delimiter">@</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a><span class="delimiter">,</span> <span class="var">size</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">,</span> <span class="var">blocking</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/Gio/Cancellable.xhtml#T">Gir.Gio.Cancellable.T</a><span class="delimiter">,</span> <span class="var">cancellable</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="set_blocking"><span class="code"><span class="symbol">:set_blocking</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">blocking</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="set_broadcast"><span class="code"><span class="symbol">:set_broadcast</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">broadcast</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="set_keepalive"><span class="code"><span class="symbol">:set_keepalive</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">keepalive</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="set_listen_backlog"><span class="code"><span class="symbol">:set_listen_backlog</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">backlog</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="set_multicast_loopback"><span class="code"><span class="symbol">:set_multicast_loopback</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">loopback</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="set_multicast_ttl"><span class="code"><span class="symbol">:set_multicast_ttl</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">ttl</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="set_option"><span class="code"><span class="symbol">:set_option</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">level</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">optname</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">value</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
		
	</div><h5 id="set_timeout"><span class="code"><span class="symbol">:set_timeout</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">timeout</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="set_ttl"><span class="code"><span class="symbol">:set_ttl</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">ttl</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="shutdown"><span class="code"><span class="symbol">:shutdown</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">shutdown_read</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">,</span> <span class="var">shutdown_write</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">,</span> <span class="var">error</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
		
	</div><h5 id="speaks_ipv4"><span class="code"><span class="symbol">:speaks_ipv4</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div></section></section>
	</div>
</div>
<footer>
	<div class="text-center">
		<span>Copyright: &copy; 2008-2018 Raja Mukherji</span>
	</div>
</footer>
</body>
</html>