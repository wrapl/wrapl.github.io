<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/>
	<meta charset="utf-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
	<meta name="description" content=""/>
	<meta name="author" content="ink, cookbook, recipes"/>
	<meta name="HandheldFriendly" content="True"/>
	<meta name="MobileOptimized" content="320"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"/>
	<meta property="og:title" content="Wrapl, The Programming Language"/>
	<meta property="og:description" content="Wrapl, The Programming Language"/>
	<meta property="og:url" content="http://wrapl.sf.net"/>
	<meta property="og:image" content="http://wrapl.sf.net/sample.png"/>
	<link rel="stylesheet" type="text/css" href="/css/spectre.min.css"/>
	<link rel="stylesheet" type="text/css" href="/css/spectre-exp.min.css"/>
	<link rel="stylesheet" type="text/css" href="/css/spectre-icons.min.css"/>
	<link rel="stylesheet" type="text/css" href="/code.css"/>
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp" crossorigin="anonymous"/>
	<link href="https://fonts.googleapis.com/css?family=Roboto|Roboto+Mono" rel="stylesheet"/>
	<link href="https://fonts.googleapis.com/css?family=Fira+Sans" rel="stylesheet"/>
	<link rel="stylesheet" href="https://cdn.rawgit.com/tonsky/FiraCode/1.205/distr/fira_code.css"/>
	<title>b.Gir.GLib.Variant</title>
</head>
<body>
<div class="off-canvas off-canvas-sidebar-show">
	<a class="off-canvas-toggle btn btn-primary btn-action" href="#sidebar-id">
		<i class="icon icon-menu"></i>
	</a>
	<div id="sidebar-id" class="off-canvas-sidebar">
		<ul class="nav">
			<li class="nav-item"><a href="/index.xhtml" class="toplevel"><i class="fa fa-home"></i> Home</a>
				<ul class="nav">
					<li class="nav-item"><a href="/index.xhtml#Features">Features</a></li>
					<li class="nav-item"><a href="/index.xhtml#Contact">Contact</a></li>
				</ul>
			</li>
			<li class="nav-item"><a href="/news.xhtml" class="toplevel"><i class="fa fa-clock"></i> News</a></li>
			<li class="nav-item"><a href="/docs.xhtml" class="toplevel"><i class="fa fa-book"></i> Documentation</a>
				<ul class="nav">
					<li class="nav-item"><a href="/ref/tutorial.xhtml">Tutorial</a></li>
					<li class="nav-item"><a href="/docs.xhtml#Reference">Reference</a>
						<ul class="nav flyout right">
							<li class="nav-item"><a href="/ref/syntax.xhtml">Syntax</a></li>
							<li class="nav-item"><a href="/ref/expressions.xhtml">Expressions</a></li>
						</ul>
					</li>
					<li class="nav-item"><a href="/samples.xhtml">Sample</a></li>
					<li class="nav-item"><a href="/lib.xhtml">Libraries</a></li>
					<li class="nav-item"><a href="/docs.xhtml#tools">Tools</a></li>
				</ul>
			</li>
			<li class="nav-item"><a href="/download.xhtml" class="toplevel"><i class="fa fa-download"></i> Download</a>
				<ul class="nav">
					<li class="nav-item"><a href="/download.xhtml#Source">Source</a></li>
					<li class="nav-item"><a href="/download.xhtml#Binaries">Binaries</a></li>
				</ul>
			</li>
			<li class="nav-item"><a href="/links.xhtml" class="toplevel"><i class="fa fa-globe"></i> Links</a>
				<ul class="nav">
					<li class="nav-item"><a href="/links.xhtml#Programming_Languages">Other Languages</a></li>
					<li class="nav-item"><a href="/links.xhtml#Development_Tools">Development Tools</a></li>
					<li class="nav-item"><a href="/links.xhtml#Libraries">Libraries</a></li>
				</ul>
			</li>
		</ul>
	</div>
	<a class="off-canvas-overlay" href="#close"></a>
	<div class="off-canvas-content">
		<h1 id="title"><img src="/logo.png" alt="W"/> Wrapl, The Programming Language</h1>
<ul class="breadcrumb"><li class="breadcrumb-item"><a href="/lib.xhtml">Libraries</a></li><li class="breadcrumb-item"><a href="/lib/Gir.xhtml">Gir</a></li><li class="breadcrumb-item"><a href="/lib/Gir/GLib.xhtml">GLib</a></li><li class="breadcrumb-item"><a href="/lib/Gir/GLib/Variant.xhtml">Variant</a></li></ul><section id="Variant" class="section"><section id="Types" data-spy="true" data-target="#side-menu"><h3>Types</h3><h5 id="T"><span class="code">T</span></h5><div class="comment">
	</div></section><section id="Constants" data-spy="true" data-target="#side-menu"><h3>Constants</h3><h5 id="Nil"><span class="code">Nil</span> <span class="delimiter">:</span> <a class="id" href="#T">T</a></h5><div class="comment">
	</div></section><section id="Functions" data-spy="true" data-target="#side-menu"><h3>Functions</h3><h5 id="IsObjectPath"><span class="code">IsObjectPath<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="IsSignature"><span class="code">IsSignature<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewArray"><span class="code">NewArray<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewBoolean"><span class="code">NewBoolean<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewByte"><span class="code">NewByte<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewBytestring"><span class="code">NewBytestring<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewBytestringArray"><span class="code">NewBytestringArray<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewDictEntry"><span class="code">NewDictEntry<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewDouble"><span class="code">NewDouble<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewFixedArray"><span class="code">NewFixedArray<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewFromBytes"><span class="code">NewFromBytes<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewFromData"><span class="code">NewFromData<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewHandle"><span class="code">NewHandle<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewInt16"><span class="code">NewInt16<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewInt32"><span class="code">NewInt32<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewInt64"><span class="code">NewInt64<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewMaybe"><span class="code">NewMaybe<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewObjectPath"><span class="code">NewObjectPath<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewObjv"><span class="code">NewObjv<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewSignature"><span class="code">NewSignature<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewString"><span class="code">NewString<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewStrv"><span class="code">NewStrv<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewTuple"><span class="code">NewTuple<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewUint16"><span class="code">NewUint16<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewUint32"><span class="code">NewUint32<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewUint64"><span class="code">NewUint64<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="NewVariant"><span class="code">NewVariant<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="Parse"><span class="code">Parse<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="ParseErrorPrintContext"><span class="code">ParseErrorPrintContext<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="ParseErrorQuark"><span class="code">ParseErrorQuark<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div><h5 id="ParserGetErrorQuark"><span class="code">ParserGetErrorQuark<span class="delimiter">(</span><span class="delimiter">)</span></span></h5><div class="comment">
	</div></section><section id="Methods" data-spy="true" data-target="#side-menu"><h3>Methods</h3><h5 id="_=_"><span class="code"><span class="symbol">:</span><span class="literal">"="</span><span class="delimiter">(</span><span class="var">_</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">_</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span></span></h5><div class="comment">
		
		
	</div><h5 id="byteswap"><span class="code"><span class="symbol">:byteswap</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a></span></h5><div class="comment">
		
	</div><h5 id="check_format_string"><span class="code"><span class="symbol">:check_format_string</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">format_string</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/String.xhtml#T">Std.String.T</a><span class="delimiter">,</span> <span class="var">copy_only</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
		
	</div><h5 id="classify"><span class="code"><span class="symbol">:classify</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/VariantClass.xhtml#T">Gir.GLib.VariantClass.T</a></span></h5><div class="comment">
		
	</div><h5 id="compare"><span class="code"><span class="symbol">:compare</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">two</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
		
	</div><h5 id="dup_bytestring"><span class="code"><span class="symbol">:dup_bytestring</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a></span></h5><div class="comment">
		
	</div><h5 id="dup_bytestring_array"><span class="code"><span class="symbol">:dup_bytestring_array</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a></span></h5><div class="comment">
		
	</div><h5 id="dup_objv"><span class="code"><span class="symbol">:dup_objv</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a></span></h5><div class="comment">
		
	</div><h5 id="dup_string"><span class="code"><span class="symbol">:dup_string</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">length</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/String.xhtml#T">Std.String.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="dup_strv"><span class="code"><span class="symbol">:dup_strv</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a></span></h5><div class="comment">
		
	</div><h5 id="equal"><span class="code"><span class="symbol">:equal</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">two</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="get_boolean"><span class="code"><span class="symbol">:get_boolean</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_byte"><span class="code"><span class="symbol">:get_byte</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_bytestring"><span class="code"><span class="symbol">:get_bytestring</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_bytestring_array"><span class="code"><span class="symbol">:get_bytestring_array</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_child_value"><span class="code"><span class="symbol">:get_child_value</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">index_</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="get_data"><span class="code"><span class="symbol">:get_data</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_data_as_bytes"><span class="code"><span class="symbol">:get_data_as_bytes</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/Bytes.xhtml#T">Gir.GLib.Bytes.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_double"><span class="code"><span class="symbol">:get_double</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Real.xhtml#T">Std.Real.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_handle"><span class="code"><span class="symbol">:get_handle</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_int16"><span class="code"><span class="symbol">:get_int16</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_int32"><span class="code"><span class="symbol">:get_int32</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_int64"><span class="code"><span class="symbol">:get_int64</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#T">Std.Integer.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_maybe"><span class="code"><span class="symbol">:get_maybe</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_normal_form"><span class="code"><span class="symbol">:get_normal_form</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_objv"><span class="code"><span class="symbol">:get_objv</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_size"><span class="code"><span class="symbol">:get_size</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_string"><span class="code"><span class="symbol">:get_string</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">length</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/String.xhtml#T">Std.String.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="get_strv"><span class="code"><span class="symbol">:get_strv</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Agg/List.xhtml#T">Agg.List.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_type"><span class="code"><span class="symbol">:get_type</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/VariantType.xhtml#T">Gir.GLib.VariantType.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_type_string"><span class="code"><span class="symbol">:get_type_string</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/String.xhtml#T">Std.String.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_uint16"><span class="code"><span class="symbol">:get_uint16</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_uint32"><span class="code"><span class="symbol">:get_uint32</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="get_uint64"><span class="code"><span class="symbol">:get_uint64</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#T">Std.Integer.T</a></span></h5><div class="comment">
		
	</div><h5 id="get_variant"><span class="code"><span class="symbol">:get_variant</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a></span></h5><div class="comment">
		
	</div><h5 id="hash"><span class="code"><span class="symbol">:hash</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="is_container"><span class="code"><span class="symbol">:is_container</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div><h5 id="is_floating"><span class="code"><span class="symbol">:is_floating</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div><h5 id="is_normal_form"><span class="code"><span class="symbol">:is_normal_form</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
	</div><h5 id="is_of_type"><span class="code"><span class="symbol">:is_of_type</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">type</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/GLib/VariantType.xhtml#T">Gir.GLib.VariantType.T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="lookup_value"><span class="code"><span class="symbol">:lookup_value</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">key</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/String.xhtml#T">Std.String.T</a><span class="delimiter">,</span> <span class="var">expected_type</span> <span class="delimiter">@</span> <a class="id" href="/lib/Gir/GLib/VariantType.xhtml#T">Gir.GLib.VariantType.T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a></span></h5><div class="comment">
		
		
		
	</div><h5 id="n_children"><span class="code"><span class="symbol">:n_children</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Integer.xhtml#SmallT">Std.Integer.SmallT</a></span></h5><div class="comment">
		
	</div><h5 id="print"><span class="code"><span class="symbol">:print</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">type_annotate</span> <span class="delimiter">@</span> <a class="id" href="/lib/Std/Symbol.xhtml#T">Std.Symbol.T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/String.xhtml#T">Std.String.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="ref"><span class="code"><span class="symbol">:ref</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a></span></h5><div class="comment">
		
	</div><h5 id="ref_sink"><span class="code"><span class="symbol">:ref_sink</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a></span></h5><div class="comment">
		
	</div><h5 id="store"><span class="code"><span class="symbol">:store</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">data</span><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
		
	</div><h5 id="take_ref"><span class="code"><span class="symbol">:take_ref</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Gir/GLib/Variant.xhtml#T">Gir.GLib.Variant.T</a></span></h5><div class="comment">
		
	</div><h5 id="unref"><span class="code"><span class="symbol">:unref</span><span class="delimiter">(</span><span class="var">self</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span> <span class="delimiter">:</span> <a class="id" href="/lib/Std/Object.xhtml#T">Std.Object.T</a></span></h5><div class="comment">
		
	</div><h5 id="_~=_"><span class="code"><span class="symbol">:</span><span class="literal">"~="</span><span class="delimiter">(</span><span class="var">_</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">,</span> <span class="var">_</span> <span class="delimiter">@</span> <a class="id" href="#T">T</a><span class="delimiter">)</span></span></h5><div class="comment">
		
		
	</div></section></section>
	</div>
</div>
<footer>
	<div class="text-center">
		<span>Copyright: &copy; 2008-2018 Raja Mukherji</span>
	</div>
</footer>
</body>
</html>